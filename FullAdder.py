# **************************************************************************************************************************************************************************************************** #
# ******************************************************************************* 3.	To simulate  Full AdderCircuit  ****************************************************************************** #
# **************************************************************************************************************************************************************************************************** #
# -@ AmiLab


'''
Note-
    - **DATA VALIDATION EXCLUDED FOR BEING CHECKED AT THE TIME OF DATA INPUT**
    - All Testings have been logged into the terminal for future debuggings.
'''


# ********************************************************************** Argument / Variable Declaration (for Testing purposes) ********************************************************************** #



C_in = 1                                                        # For storing the Carry-in Bits
MSB = 1                                                         # For storing the MSB(Most Significant Bit) of the Input Signal
LSB = 1                                                         # For storing the LSB(Least Significant Bit) of the Input Signal
bits = [C_in, MSB, LSB]                                         # For storing the complete(both MSB and LSB bits) Input Signal along with the Carry-in Bits



# **************************************************************************************** Section ends here **************************************************************************************** #


# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- #



# ******************************************************************************* Calculation of Full Binary Addition  ******************************************************************************* #



def fullAdder(bits):
    if bits[0] in (0, 1) and  bits[1] in (0, 1) and  bits[2] in (0, 1):
        return {'Carry_out': bits[0] & bits[1] | bits[2] & (bits[0] ^ bits[1]), 'Sum': bits[0] ^ bits[1] ^ bits[2]}
    else:
        print('Not a Valid Binary Number')

# Testing-
bin_add = fullAdder(bits)
print(f'Binary_Full_Addition((Carry_in = {bits[0]}), {bits[1]}, {bits[2]}) =', bin_add)




# ********************************************************************************* Section ends here *********************************************************************************************** #


# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- #




